import os
import cv2
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

# Path to dataset (change this to your path after downloading Kaggle data)
dataset_path = "dogs-vs-cats/train"

# Parameters
img_size = 64  # resize all images to 64x64

# Step 1: Load dataset
data = []
labels = []

for category in ["dog", "cat"]:
    folder = os.path.join(dataset_path, category)
    label = 0 if category == "dog" else 1
    for file in os.listdir(folder)[:1000]:  # limit to 1000 per class for speed
        img_path = os.path.join(folder, file)
        img = cv2.imread(img_path)
        img = cv2.resize(img, (img_size, img_size))
        img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        data.append(img_gray.flatten())
        labels.append(label)

# Convert to numpy arrays
data = np.array(data)
labels = np.array(labels)

print("Dataset shape:", data.shape)

# Step 2: Train-test split
X_train, X_test, y_train, y_test = train_test_split(data, labels, test_size=0.2, random_state=42)

# Step 3: Train SVM classifier
print("Training SVM...")
clf = SVC(kernel='linear', random_state=42)
clf.fit(X_train, y_train)

# Step 4: Predictions
y_pred = clf.predict(X_test)

# Step 5: Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
